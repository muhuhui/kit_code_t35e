//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : T3C_SLAVE
//  @ File Name : MoveTask.cpp
//  @ Date : 2019-06-25
//  @ Author : ShunWang
//
//


#include "MoveTask.h"
#include "MoveTaskComponent.h"
#include "Driver/MyLog4CXX.h"

const std::string LOG_TAG("root.MoveTask::");

MoveTask::MoveTask()
{
    _taskComponents.clear();
    setCreateTime(time(0));
}

void MoveTask::add(MoveTaskComponent *taskComponent)
{
    _taskComponents.push_back(taskComponent);
}

void MoveTask::remove(MoveTaskComponent *taskComponent)
{
	auto logger = initLogger(LOG_TAG + std::string(__FUNCTION__));
    std::vector<MoveTaskComponent *>::iterator it;
    if(getChildSize() > 0)
    {
	    for(it=_taskComponents.begin();it!=_taskComponents.end();it++)
	    {
	    	if((*it) == taskComponent)
	    	{
	    	 	_taskComponents.erase(it);
				printf("MoveTask::%s(), __LINE__= %d, parent: %p, remove component: %p, child size: %d\n", __FUNCTION__, __LINE__, this, taskComponent, getChildSize());
				LOG4CPLUS_INFO(logger, " parent: " << this << ", remove component: "<< taskComponent <<", child size: %d\n" << getChildSize() );
	    	 	break;
	    	}
	    }
    }
    // printf("getChildSize = %d, __FILE__ =%s, __LINE__=%d\n",getChildSize(),__FILE__,__LINE__);
}

std::vector<MoveTaskComponent *> MoveTask::getTaskComponents()
{
	return _taskComponents;
}

//寻找MoveTaskItem头节点
MoveTaskComponent* MoveTask::findLeftMostChild()
{
    if(_taskComponents.size() > 0 && NULL != _taskComponents[0])
	{
        return _taskComponents[0]->findLeftMostChild();
	}
	else
	{
        return NULL;
	}
}


int MoveTask::getChildSize()
{
	return _taskComponents.size();
}

void MoveTask::init()
{
	_taskComponents.clear();
}

MoveTaskComponent* MoveTask::getChild(int index)
{
	if(index<0 || (index+1) >getChildSize())
	{
        return NULL;
	}
    return _taskComponents[index];
}



