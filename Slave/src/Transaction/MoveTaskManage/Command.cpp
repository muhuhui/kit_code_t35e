//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : T3C_SLAVE
//  @ File Name : Command.cpp
//  @ Date : 2019-06-25
//  @ Author : ShunWang
//
//


#include "Command.h"


void Command::setParaJson(Json::Value& paraJson)
{
	_paraJson = paraJson;
}

Json::Value& Command::getParaJson()
{
	return _paraJson;
}

void Command::setSharedParaJson(Json::Value *paraJson)
{
    if(_sharedParent == NULL) {
        printf("Command::%s(), line = %d, parent is null!", __FUNCTION__, __LINE__);
        return;
    }
    _sharedParent->setParaJson(*paraJson);
}

Json::Value* Command::getSharedParaJson()
{
    if(_sharedParent == NULL) {
        printf("Command::%s(), line = %d, parent is null!", __FUNCTION__, __LINE__);
        return NULL;
    }
    return &_sharedParent->getParaJson();
}

void Command::setSharedParent(MoveTaskComponent* parent)
{
    _sharedParent = parent;
}

Command::Command(Json::Value& paraJson)
{
	_paraJson = paraJson;
	_exeRet = ST_SLEEP;
    _sharedParent = NULL;
	_waitCnt = 0;
    _tryCnt = 0;
    _exeStatus = 0;
}

Command::Command()
{
	_exeRet = ST_SLEEP;
    _sharedParent = NULL;
	_waitCnt = 0;
	_tryCnt = 0;
    _exeStatus = 0;
}

void Command::setExeRet(int exeRet)
{
	
	this->_exeRet = exeRet;
}
int Command::getExeRet()
{
	return _exeRet;
}

void Command::initStatusPara()
{
	_exeRet = ST_SLEEP;
	_waitCnt = 0;
	_tryCnt = 0;
    _exeStatus = 0;
}

//清理定时器
void Command::clearTimer()
{
	_waitCnt = 0;
}

//休眠等待定时器到时
int Command::sleeepWaitTimeOut(int second)
{
	if(_waitCnt < 5*second)//线程每次循环休眠100ms
	{
        _waitCnt++;
		return -1;
	}
	else
	{
		_waitCnt = 0;
		return 0;
	}
}

int Command::exec()
{

}


