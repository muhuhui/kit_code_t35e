//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : T3C_SLAVE
//  @ File Name : SetSpeedCommand.cpp
//  @ Date : 2019-06-25
//  @ Author : ShunWang
//
//


#include "SQLOperationCommand.h"
#include "Transaction/MySQLServer.h"
int SQLOperationCommand::exec()
{
    int sqlNum = _paraJson["sqlNum"].asInt();
    MySQLServer *mySQLServer = MySQLServer::getInstance();
    Json::Value *sharedJson = getSharedParaJson();
    if(sharedJson == NULL) {
        printf("SQLOperationCommand::%s(), can't get json value!\n", __FUNCTION__);
        setExeRet(ST_FAIL);
        return _exeRet;
    }
    int execId = (*sharedJson)[JSON_EXEC_ID].asInt();

	//解析JSON参数
	if(_exeRet != ST_SUCCESS && _exeRet != ST_FAIL)
	{
        if(sqlNum == SQL_ADD_EXEC_RESULT) {
            if(execId > -1) {
                printf("SQLOperationCommand::%s(), already execute!\n", __FUNCTION__);
                setExeRet(ST_FAIL);
                return _exeRet;
            }

            int taskId = _paraJson["taskId"].asInt();
            ViewPointInfo viewPointInfo;
            time_t curTime;
            time(&curTime);
            viewPointInfo.nExecTime = curTime;
            viewPointInfo.nTaskId = taskId;
            if(mySQLServer->insertExecResult(viewPointInfo)) {
                printf("SQLOperationCommand::%s(), __LINE__= %d: SQL operation fail!\n", __FUNCTION__, __LINE__);
                setExeRet(ST_FAIL);
                return _exeRet;
            }
            if(mySQLServer->getCurExecId(viewPointInfo)) {
                printf("SQLOperationCommand::%s(), __LINE__= %d: SQL operation fail!\n", __FUNCTION__, __LINE__);
                setExeRet(ST_FAIL);
                return _exeRet;
            }
            (*sharedJson)[JSON_EXEC_ID] = viewPointInfo.nExecId;
            setSharedParaJson(sharedJson);
            printf("SQLOperationCommand::%s(), __LINE__= %d: curTime: %ld, taskId: %d, execId: %d!\n", __FUNCTION__, __LINE__, curTime, taskId, viewPointInfo.nExecId);
            setExeRet(ST_SUCCESS);
        }
        else {
            setExeRet(ST_FAIL);
        }
	}
	return _exeRet;
}

