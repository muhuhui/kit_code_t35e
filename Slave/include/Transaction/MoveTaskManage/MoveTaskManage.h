//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : T3C_SLAVE
//  @ File Name : MoveTaskManage.h
//  @ Date : 2019-06-25
//  @ Author : ShunWang
//
//


#if !defined(_MOVETASKMANAGE_H)
#define _MOVETASKMANAGE_H

#include "MoveTask.h"
#include "MoveTaskItem.h"
#include "Transaction/Task.h"
#include "MoveException.h"
#include "PositionPlan.h"
#include "Transaction/MoveTaskManage/GotoCommand.h"
#include "Transaction/MoveTaskManage/HallDetCommand.h"
#include "Transaction/MoveTaskManage/RechargeCommand.h"
#include "Transaction/MoveTaskManage/MoveControlCommand.h"
//#include "Transaction/MoveTaskManage/TakePicCommand.h"
#include "Transaction/MoveTaskManage/TakePicException.h"
#include "Transaction/MoveTaskManage/SetSpeedCommand.h"
#include "Transaction/MoveTaskManage/RecoverSpeedCommand.h"
#include "Transaction/MoveTaskManage/DriveModeCommand.h"
#include "Transaction/MoveTaskManage/DoorSwitchCommand.h"
#include "Transaction/MoveTaskManage/USSwitchCommand.h"
#include "Transaction/MoveTaskManage/USSetThresholdCommand.h"
#include "Transaction/MoveTaskManage/InfraredSwitchCommand.h"
#include "Transaction/MoveTaskManage/SQLOperationCommand.h"
#include "Transaction/MoveTaskManage/LiftLockCommand.h"
#include "Transaction/MoveTaskManage/CheckFDCommand.h"
#include "Transaction/MoveTaskManage/SetMaxCurrentCommand.h"
#include "Transaction/MoveTaskManage/T7AGotoCommand.h"
#include "Transaction/MoveTaskManage/T7AChargeCommand.h"
#include "Transaction/MoveTaskManage/PtzRotateCommand.h"
#include "Transaction/MoveTaskManage/PddDetCommand.h"
#include "Transaction/MoveTaskManage/GotoHome.h"
#include "Transaction/MoveTaskManage/PtzArmCommand.h"
#include "Transaction/MoveTaskManage/PddDetCommand.h"
#include "Transaction/MoveTaskManage/TakePhotoCommand.h"
#include "Transaction/MoveTaskManage/SQLInsertCommand.h"
#include "Transaction/MoveTaskManage/ImageRecCommand.h"
#include "Transaction/MoveTaskManage/LiftArmCommand.h"
#include "Transaction/MoveTaskManage/RecordVideoCommand.h"
#include <mutex>
class MoveTaskManage {
public:

	enum TaskPriority
	{
		TP_RFID=0,     //RFID触发任务
		TP_PLAN,     //定点任务
		TP_MANUL,    //手动控制任务
		TP_RECHARGE, //充电任务
		TP_REGULAR,  //定时任务
		TP_TOTAL     //优先级总数
	};
	enum ActType //动作类型
	{
		AT_SET_SPEED=1,
		AT_RECOVER_SPEED,
		AT_MOVE_CONTROL,
		AT_SET_DRIVE_MODE,
		AT_DOOR_SWITCH,
		AT_US_SWITCH,
		AT_INFRARED_SWITCH,
        AT_LIFT_LOCK,
        AT_CHECK_FD,
		AT_US_SET_THRESHOLD,
		AT_SET_MAX_CURRENT,
		AT_LIFTARM_CONTROL,
	};
	static MoveTaskManage* getInstance();
	static void process(MoveTaskManage* moveTaskManage);
	static void regularTaskAgingCheck(MoveTaskManage* moveTaskManage);
	void addTask(MoveTask *task, int priority);
	void addTaskItem(MoveTaskItem *taskItem,int priority);
	void init();
	void setCurTaskItem(MoveTaskItem *curTaskItem);
	MoveTaskItem * getCurTaskItem();
    int getManualItemSize();
	MoveTaskItem *queryHighestPrioriyTaskItem(MoveTaskItem *curTaskItem);
    MoveTaskItem* createChargeTaskItem(float destPos, ItemType itemType, RECHARGE_TYPE chargeType, string destPosName = "");
	void lowBatteryCharge();
	void manulCharge();
	int manulMoveControl(int &ctrl, float &value, std::string posName="");
    void createPatroPlanTaskItem(Task& task, TaskPriority priority);
    int  queryCurPlanTaskAndViewPoint(int& nTaskId, int& nViewPointId, int& nExecId, ItemType& type);
	void createRFIDTaskItem(int rfidNum);
	void createPositionPlanTaskItem(PositionPlan& pos, MoveState direct);
    Command* generateCommandByActionId(int actionId, string actionParam);
    void clearManualTaskCommands();
    void clearChargeTaskCommands();
    MoveTaskItem* createMoveCtrlTaskItem(int ctrl, float value, std::string posName="");
	void createPtzArmHomeTaskItem(TaskPriority priority = TP_RECHARGE);
	void setVideoflag(int nFlag);
private:
	MoveTask _rootTasks[6];             //5种优先级任务
	MoveTaskItem *_curTaskItem;         //优先级调度后当前处理的某任务的某批命令
	MoveException* moveException;

    void clearTaskCommands(MoveTaskComponent* moveTask);
    void clearTaskCommandsExceptPatroPlan(MoveTaskComponent* moveTask);
	
};
#endif  //_MOVETASKMANAGE_H
