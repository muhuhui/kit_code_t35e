//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : T3C_SLAVE
//  @ File Name : MoveTaskItem.h
//  @ Date : 2019-06-25
//  @ Author : ShunWang
//
//


#if !defined(_MOVETASKITEM_H)
#define _MOVETASKITEM_H

#include "MoveTaskComponent.h"
#include "Command.h"
#include "Exception.h"

enum ItemType
{
    NO_ITEM = -1,
    MANUAL_CHARGE_ITEM = 0,
    LOW_BATTERY_CHARGE_ITEM,
    PATRO_PLAN_CHARGE_ITEM,
    PATRO_PLAN_ITEM,
    MOVE_CONTROL_ITEM,
    POSITION_PLAN_ITEM,
    VIDEO_PLAN_ITEM,
    POWER_ON_PLAN_ITEM,
};

class MoveTaskItem : public MoveTaskComponent {
public:
    MoveTaskItem(ItemType type);
    ~MoveTaskItem();
	std::vector<Command*>	_commands;
	std::vector<Command*>::iterator  curIter;
    const ItemType m_itemType;
	int run();
	void addCommand(Command* command);
	void clearCommands();
	void initStatusPara();
	Command* queryCommand(int index);
	virtual MoveTaskComponent* findLeftMostChild(); 

    void init();
    int getChildSize();
    MoveTaskComponent* getChild(int index);

    bool isActive() { return m_isActive; }
    void activate() { m_isActive = true; }
    void deactivate() { m_isActive = false; }
    int registerException(Exception *exception);
    void exceptionsExit();

private:
    bool m_isActive;
    std::vector<Exception*> m_exceptionVect;
};

#endif  //_MOVETASKITEM_H
